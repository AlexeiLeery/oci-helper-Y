"use strict";(self["webpackChunkoci_help_web"]=self["webpackChunkoci_help_web"]||[]).push([[462],{6462:function(t,e,a){a.r(e),a.d(e,{default:function(){return b}});var s=a(6768),r=a(4232);const i={class:"data-card"},n={class:"data-card"},o={class:"data-card"},c={class:"data-card"},l={class:"chart",ref:"cpuChart"},h={class:"chart",ref:"memoryChart"},u={class:"chart",ref:"trafficChart"};function d(t,e,a,d,p,m){const f=(0,s.g2)("el-col"),k=(0,s.g2)("el-row"),b=(0,s.gN)("loading");return(0,s.uX)(),(0,s.CE)("div",null,[(0,s.bo)(((0,s.uX)(),(0,s.Wv)(k,{gutter:20,class:"card-container"},{default:(0,s.k6)((()=>[(0,s.bF)(f,{span:6},{default:(0,s.k6)((()=>[(0,s.Lk)("div",i,[e[0]||(e[0]=(0,s.Lk)("h3",null,(0,r.v_)("总API数量"),-1)),(0,s.Lk)("p",null,(0,r.v_)(p.cards.users),1)])])),_:1}),(0,s.bF)(f,{span:6},{default:(0,s.k6)((()=>[(0,s.Lk)("div",n,[e[1]||(e[1]=(0,s.Lk)("h3",null,(0,r.v_)("开机任务数量"),-1)),(0,s.Lk)("p",null,(0,r.v_)(p.cards.tasks),1)])])),_:1}),(0,s.bF)(f,{span:6},{default:(0,s.k6)((()=>[(0,s.Lk)("div",o,[e[2]||(e[2]=(0,s.Lk)("h3",null,(0,r.v_)("区域数量"),-1)),(0,s.Lk)("p",null,(0,r.v_)(p.cards.regions),1)])])),_:1}),(0,s.bF)(f,{span:6},{default:(0,s.k6)((()=>[(0,s.Lk)("div",c,[e[3]||(e[3]=(0,s.Lk)("h3",null,(0,r.v_)("系统运行天数"),-1)),(0,s.Lk)("p",null,(0,r.v_)(p.cards.days),1)])])),_:1})])),_:1})),[[b,p.loading]]),(0,s.bF)(k,{gutter:20,class:"chart-container"},{default:(0,s.k6)((()=>[(0,s.bF)(f,{span:12},{default:(0,s.k6)((()=>[(0,s.bF)(k,{gutter:20},{default:(0,s.k6)((()=>[(0,s.bF)(f,{span:12},{default:(0,s.k6)((()=>[(0,s.Lk)("div",l,null,512)])),_:1}),(0,s.bF)(f,{span:12},{default:(0,s.k6)((()=>[(0,s.Lk)("div",h,null,512)])),_:1})])),_:1})])),_:1}),(0,s.bF)(f,{span:12},{default:(0,s.k6)((()=>[(0,s.Lk)("div",u,null,512)])),_:1})])),_:1})])}a(8992),a(3949);var p=a(9671),m={data(){return{loading:!1,cards:{},cpuChart:null,memoryChart:null,trafficChart:null,ws:null,reconnectAttempts:0,maxReconnectAttempts:5,reconnectDelay:5e3,manualClose:!1,isReconnecting:!1}},mounted(){this.initInfo(),this.initCharts(),this.initWebSocket(),this.$router.beforeEach(((t,e,a)=>{this.closeWebSocket(),a()}))},beforeUnmount(){this.closeWebSocket()},methods:{initInfo(){this.loading=!0,this.$axios.get("/sys/glance").then((t=>{this.cards=t.data.data,localStorage.setItem("currentVersion",t.data.data.currentVersion),this.loading=!1})).catch((t=>{throw console.error("Error fetching glance data:",t),t}))},initCharts(){this.cpuChart=p.Ts(this.$refs.cpuChart),this.memoryChart=p.Ts(this.$refs.memoryChart),this.trafficChart=p.Ts(this.$refs.trafficChart),this.cpuChart.setOption({title:{text:"CPU 使用率（%）",left:"center"},tooltip:{trigger:"item"},series:[{name:"CPU 使用率（%）",type:"pie",radius:"50%",data:[]}]}),this.memoryChart.setOption({title:{text:"Memory 使用率（%）",left:"center"},tooltip:{trigger:"item"},series:[{name:"Memory 使用率（%）",type:"pie",radius:"50%",data:[]}]}),this.trafficChart.setOption({title:{text:"流量实时速率（KB/s）",left:"center"},tooltip:{trigger:"axis",formatter:function(t){let e=t[0].axisValue+"<br/>";return t.forEach((t=>{e+=`${t.seriesName}: ${t.value} KB/s<br/>`})),e}},legend:{data:["入站","出站"],bottom:15},xAxis:{type:"category",data:[],axisLabel:{rotate:30}},yAxis:{type:"value",axisLabel:{formatter:"{value}"}},series:[{name:"入站",type:"line",data:[],smooth:!0,showSymbol:!0},{name:"出站",type:"line",data:[],smooth:!0,showSymbol:!0}]})},async closeWebSocket(){this.ws&&(this.ws.readyState===WebSocket.OPEN&&(this.ws.close(),await new Promise((t=>{this.ws.onclose=()=>t()}))),this.ws=null,this.reconnectAttempts=0,this.isReconnecting=!1)},initWebSocket(){try{const t=sessionStorage.getItem("token"),e=this.$axios.defaults.baseURL.replace(/^http/,"ws").replaceAll("/api",""),a=`${e}/metrics/${t}`;this.ws=new WebSocket(a),this.ws.onopen=()=>{console.log("WebSocket connection established."),this.reconnectAttempts=0},this.ws.onmessage=t=>{try{const{cpuUsage:e,memoryUsage:a,trafficData:s}=JSON.parse(t.data);this.updateCharts(e,a,s)}catch(e){console.error("Error parsing message:",e)}},this.ws.onclose=t=>{console.log("WebSocket connection closed:",t)},this.ws.onerror=t=>{console.error("WebSocket error:",t)}}catch(t){console.error("Error initializing WebSocket:",t)}},updateCharts(t,e,a){this.cpuChart&&this.cpuChart.setOption({series:[{data:[{value:t.used,name:"已使用"},{value:t.free,name:"空闲"}]}]}),this.memoryChart&&this.memoryChart.setOption({series:[{data:[{value:e.used,name:"已使用"},{value:e.free,name:"空闲"}]}]}),this.trafficChart&&this.trafficChart.setOption({xAxis:{data:a.timestamps},series:[{name:"入站",data:a.inbound},{name:"出站",data:a.outbound}]})}}},f=a(1241);const k=(0,f.A)(m,[["render",d]]);var b=k}}]);
//# sourceMappingURL=462.41b49d2d.js.map