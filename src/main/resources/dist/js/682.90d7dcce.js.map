{"version":3,"file":"js/682.90d7dcce.js","mappings":"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","sources":["webpack://oci-help-web/./src/components/log/OciLog.vue","webpack://oci-help-web/./src/components/log/OciLog.vue?4506"],"sourcesContent":["<template>\r\n  <el-scrollbar class=\"scrollbar\" ref=\"scrollContainer\">\r\n    <div\r\n        v-for=\"(log, index) in logMessages\"\r\n        :key=\"index\"\r\n        :class=\"getLogLevelClass(log)\"\r\n    >\r\n      {{ log }}\r\n    </div>\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nimport {ElMessage} from 'element-plus';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      logMessages: [],\r\n      ws: null,\r\n      reconnectAttempts: 0,\r\n      maxReconnectAttempts: 5,\r\n      reconnectDelay: 5000,\r\n      manualClose: false,\r\n      isReconnecting: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initWebSocket();\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n  },\r\n  beforeUnmount() {\r\n    this.closeWebSocket();\r\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\r\n  },\r\n  methods: {\r\n    getLogLevelClass(log) {\r\n      if (log.includes('ERROR')) return 'error-log';\r\n      if (log.includes('WARN')) return 'warn-log';\r\n      return 'info-log';\r\n    },\r\n    initWebSocket() {\r\n      if (this.ws && (this.ws.readyState === WebSocket.OPEN || this.ws.readyState === WebSocket.CONNECTING)) {\r\n        console.log('WebSocket is already connected or connecting');\r\n        return;\r\n      }\r\n\r\n      if (this.isReconnecting) {\r\n        console.log('Currently reconnecting, skipping new connection attempt');\r\n        return;\r\n      }\r\n\r\n      this.logMessages = [];\r\n      this.manualClose = false;\r\n      const token = sessionStorage.getItem('token');\r\n\r\n      const baseURL = this.$axios.defaults.baseURL.replace(/^http/, 'ws').replaceAll('/api', '');\r\n      const wsURL = `${baseURL}/logs?token=${token}`;\r\n\r\n      this.ws = new WebSocket(wsURL);\r\n\r\n      this.ws.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        ElMessage({\r\n          message: 'WebSocket 连接成功，开始实时推送日志',\r\n          type: 'success',\r\n          duration: 2000 // 设置提示显示时间，单位是毫秒\r\n        });\r\n        this.reconnectAttempts = 0;\r\n        this.isReconnecting = false;\r\n        this.startHeartbeat();\r\n      };\r\n\r\n      this.ws.onmessage = (event) => {\r\n        const message = event.data;\r\n        // if (!this.logMessages.includes(message)) {\r\n        this.logMessages.push(message);\r\n        // }\r\n        if (this.logMessages.length > 200) {\r\n          this.logMessages.shift();\r\n        }\r\n\r\n        // this.scrollToBottom(); // 每次更新时自动滚动到底部\r\n      };\r\n\r\n      this.ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        this.handleReconnect();\r\n      };\r\n\r\n      this.ws.onclose = (event) => {\r\n        console.warn('WebSocket closed:', event);\r\n        this.stopHeartbeat();\r\n        if (!this.manualClose) {\r\n          this.handleReconnect();\r\n        }\r\n      };\r\n    },\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        const container = this.$refs.scrollContainer?.$el.querySelector('.el-scrollbar__wrap');\r\n        if (container) {\r\n          container.scrollTop = container.scrollHeight; // 滚动到底部\r\n        } else {\r\n          console.error(\"滚动容器未找到，请检查 el-scrollbar 的结构\");\r\n        }\r\n      });\r\n    },\r\n    closeWebSocket() {\r\n      if (this.ws) {\r\n        this.manualClose = true;\r\n        this.stopHeartbeat();\r\n        this.ws.close();\r\n        this.ws = null;\r\n      }\r\n      this.logMessages = [];\r\n    },\r\n    startHeartbeat() {\r\n      if (!this.heartbeatInterval) {\r\n        this.heartbeatInterval = setInterval(() => {\r\n          if (this.ws.readyState === WebSocket.OPEN) {\r\n            this.ws.send('ping');\r\n          }\r\n        }, 30000);\r\n      }\r\n    },\r\n    stopHeartbeat() {\r\n      if (this.heartbeatInterval) {\r\n        clearInterval(this.heartbeatInterval);\r\n        this.heartbeatInterval = null;\r\n      }\r\n    },\r\n    handleReconnect() {\r\n      if (this.isReconnecting || document.visibilityState === 'hidden') {\r\n        console.warn('Already reconnecting or page is hidden, skipping reconnect...');\r\n        return;\r\n      }\r\n\r\n      if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n        console.error('Max reconnect attempts reached. Giving up.');\r\n        return;\r\n      }\r\n\r\n      this.isReconnecting = true;\r\n      setTimeout(() => {\r\n        this.reconnectAttempts++;\r\n        console.log(`Reconnecting... (Attempt ${this.reconnectAttempts})`);\r\n        this.initWebSocket();\r\n      }, this.reconnectDelay);\r\n    },\r\n    handleVisibilityChange() {\r\n      if (document.visibilityState === 'hidden') {\r\n        console.log('Page hidden, closing WebSocket...');\r\n        this.stopHeartbeat();\r\n        this.closeWebSocket();\r\n      } else if (document.visibilityState === 'visible') {\r\n        console.log('Page visible, reconnecting WebSocket...');\r\n        this.initWebSocket();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.scrollbar {\r\n  height: 680px;\r\n  border: 1px solid #2d2d2d;\r\n  padding: 10px;\r\n  background-color: #1e1e1e;\r\n  color: #c5c6c7;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  overflow-y: auto;\r\n}\r\n\r\n.info-log {\r\n  color: #c5c6c7;\r\n}\r\n\r\n.warn-log {\r\n  background-color: #ffffcc;\r\n  color: #ff9900;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.error-log {\r\n  background-color: #ffcccc;\r\n  color: #ff0000;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n","import { render } from \"./OciLog.vue?vue&type=template&id=a8f0bf32&scoped=true\"\nimport script from \"./OciLog.vue?vue&type=script&lang=js\"\nexport * from \"./OciLog.vue?vue&type=script&lang=js\"\n\nimport \"./OciLog.vue?vue&type=style&index=0&id=a8f0bf32&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a8f0bf32\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_el_scrollbar","class","ref","default","_withCtx","_createElementBlock","_Fragment","_renderList","$data","logMessages","log","index","key","_normalizeClass","$options","getLogLevelClass","_","data","ws","reconnectAttempts","maxReconnectAttempts","reconnectDelay","manualClose","isReconnecting","mounted","this","initWebSocket","document","addEventListener","handleVisibilityChange","beforeUnmount","closeWebSocket","removeEventListener","methods","includes","readyState","WebSocket","OPEN","CONNECTING","console","token","sessionStorage","getItem","baseURL","$axios","defaults","replace","replaceAll","wsURL","onopen","ElMessage","message","type","duration","startHeartbeat","onmessage","event","push","length","shift","onerror","error","handleReconnect","onclose","warn","stopHeartbeat","scrollToBottom","$nextTick","container","$refs","scrollContainer","$el","querySelector","scrollTop","scrollHeight","close","heartbeatInterval","setInterval","send","clearInterval","visibilityState","setTimeout","__exports__","render"],"sourceRoot":""}